{"ast":null,"code":"var _jsxFileName = \"/Users/connor/dev/yodi/internal/react-next-apollo-scaffold/vendor/components/button/index.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Container from './button.styles';\nvar propTypes = {\n  /**\n   * The contents within the button\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * The color of the button\n   */\n  color: PropTypes.string,\n\n  /**\n   * If `true`, the button will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The size of the button\n   */\n  size: PropTypes.oneOf(['large', 'medium', 'small']),\n\n  /**\n   * Sets the width of the button to 100%\n   */\n  liquid: PropTypes.bool,\n\n  /**\n   * The type of button to use\n   */\n  variant: PropTypes.oneOf(['contained', 'outlined', 'text', 'fab']),\n\n  /**\n   * The position of the icon (if there is any)\n   */\n  iconPos: PropTypes.oneOf(['left', 'right', 'center']),\n\n  /**\n   * Inverts the foreground color for text and outlined variants\n   */\n  darkBg: PropTypes.bool,\n\n  /**\n   * What happens when the button is clicked\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * What happens when the button is hovered\n   */\n  onMouseEnter: PropTypes.func,\n\n  /**\n   * What happens when the hover stops in the button\n   */\n  onMouseLeave: PropTypes.func,\n\n  /**\n   * CSS styles\n   */\n  className: PropTypes.string\n};\nvar defaultProps = {\n  color: 'porcelain',\n  disabled: false,\n  size: 'medium',\n  liquid: false,\n  variant: 'contained',\n  iconPos: 'left',\n  darkBg: false,\n  onClick: null,\n  onMouseEnter: null,\n  onMouseLeave: null,\n  className: null\n};\n\nvar Button = function Button(props) {\n  var color = props.color,\n      disabled = props.disabled,\n      size = props.size,\n      liquid = props.liquid,\n      variant = props.variant,\n      iconPos = props.iconPos,\n      darkBg = props.darkBg,\n      onClick = props.onClick,\n      onMouseEnter = props.onMouseEnter,\n      onMouseLeave = props.onMouseLeave,\n      className = props.className;\n  return __jsx(Container, {\n    color: color,\n    disabled: disabled,\n    size: size,\n    liquid: liquid,\n    variant: variant,\n    iconPos: iconPos,\n    darkBg: darkBg,\n    onClick: onClick,\n    onMouseEnter: onMouseEnter,\n    onMouseLeave: onMouseLeave,\n    className: className,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, props.children);\n};\n\nButton.propTypes = propTypes;\nButton.defaultProps = defaultProps;\nexport default Button;","map":{"version":3,"sources":["/Users/connor/dev/yodi/internal/react-next-apollo-scaffold/vendor/components/button/index.jsx"],"names":["React","PropTypes","Container","propTypes","children","node","isRequired","color","string","disabled","bool","size","oneOf","liquid","variant","iconPos","darkBg","onClick","func","onMouseEnter","onMouseLeave","className","defaultProps","Button","props"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AAEA,IAAMC,SAAS,GAAG;AAChB;;;AAGAC,EAAAA,QAAQ,EAAEH,SAAS,CAACI,IAAV,CAAeC,UAJT;;AAKhB;;;AAGAC,EAAAA,KAAK,EAAEN,SAAS,CAACO,MARD;;AAShB;;;AAGAC,EAAAA,QAAQ,EAAER,SAAS,CAACS,IAZJ;;AAahB;;;AAGAC,EAAAA,IAAI,EAAEV,SAAS,CAACW,KAAV,CAAgB,CAAC,OAAD,EAAU,QAAV,EAAoB,OAApB,CAAhB,CAhBU;;AAiBhB;;;AAGAC,EAAAA,MAAM,EAAEZ,SAAS,CAACS,IApBF;;AAqBhB;;;AAGAI,EAAAA,OAAO,EAAEb,SAAS,CAACW,KAAV,CAAgB,CAAC,WAAD,EAAc,UAAd,EAA0B,MAA1B,EAAkC,KAAlC,CAAhB,CAxBO;;AAyBhB;;;AAGAG,EAAAA,OAAO,EAAEd,SAAS,CAACW,KAAV,CAAgB,CAAC,MAAD,EAAS,OAAT,EAAkB,QAAlB,CAAhB,CA5BO;;AA6BhB;;;AAGAI,EAAAA,MAAM,EAAEf,SAAS,CAACS,IAhCF;;AAiChB;;;AAGAO,EAAAA,OAAO,EAAEhB,SAAS,CAACiB,IApCH;;AAqChB;;;AAGAC,EAAAA,YAAY,EAAElB,SAAS,CAACiB,IAxCR;;AAyChB;;;AAGAE,EAAAA,YAAY,EAAEnB,SAAS,CAACiB,IA5CR;;AA6ChB;;;AAGAG,EAAAA,SAAS,EAAEpB,SAAS,CAACO;AAhDL,CAAlB;AAmDA,IAAMc,YAAY,GAAG;AACnBf,EAAAA,KAAK,EAAE,WADY;AAEnBE,EAAAA,QAAQ,EAAE,KAFS;AAGnBE,EAAAA,IAAI,EAAE,QAHa;AAInBE,EAAAA,MAAM,EAAE,KAJW;AAKnBC,EAAAA,OAAO,EAAE,WALU;AAMnBC,EAAAA,OAAO,EAAE,MANU;AAOnBC,EAAAA,MAAM,EAAE,KAPW;AAQnBC,EAAAA,OAAO,EAAE,IARU;AASnBE,EAAAA,YAAY,EAAE,IATK;AAUnBC,EAAAA,YAAY,EAAE,IAVK;AAWnBC,EAAAA,SAAS,EAAE;AAXQ,CAArB;;AAcA,IAAME,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAAW;AAAA,MAEtBjB,KAFsB,GAapBiB,KAboB,CAEtBjB,KAFsB;AAAA,MAGtBE,QAHsB,GAapBe,KAboB,CAGtBf,QAHsB;AAAA,MAItBE,IAJsB,GAapBa,KAboB,CAItBb,IAJsB;AAAA,MAKtBE,MALsB,GAapBW,KAboB,CAKtBX,MALsB;AAAA,MAMtBC,OANsB,GAapBU,KAboB,CAMtBV,OANsB;AAAA,MAOtBC,OAPsB,GAapBS,KAboB,CAOtBT,OAPsB;AAAA,MAQtBC,MARsB,GAapBQ,KAboB,CAQtBR,MARsB;AAAA,MAStBC,OATsB,GAapBO,KAboB,CAStBP,OATsB;AAAA,MAUtBE,YAVsB,GAapBK,KAboB,CAUtBL,YAVsB;AAAA,MAWtBC,YAXsB,GAapBI,KAboB,CAWtBJ,YAXsB;AAAA,MAYtBC,SAZsB,GAapBG,KAboB,CAYtBH,SAZsB;AAexB,SACE,MAAC,SAAD;AACE,IAAA,KAAK,EAAEd,KADT;AAEE,IAAA,QAAQ,EAAEE,QAFZ;AAGE,IAAA,IAAI,EAAEE,IAHR;AAIE,IAAA,MAAM,EAAEE,MAJV;AAKE,IAAA,OAAO,EAAEC,OALX;AAME,IAAA,OAAO,EAAEC,OANX;AAOE,IAAA,MAAM,EAAEC,MAPV;AAQE,IAAA,OAAO,EAAEC,OARX;AASE,IAAA,YAAY,EAAEE,YAThB;AAUE,IAAA,YAAY,EAAEC,YAVhB;AAWE,IAAA,SAAS,EAAEC,SAXb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAaGG,KAAK,CAACpB,QAbT,CADF;AAiBD,CAhCD;;AAkCAmB,MAAM,CAACpB,SAAP,GAAmBA,SAAnB;AACAoB,MAAM,CAACD,YAAP,GAAsBA,YAAtB;AAEA,eAAeC,MAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Container from './button.styles';\n\nconst propTypes = {\n  /**\n   * The contents within the button\n   */\n  children: PropTypes.node.isRequired,\n  /**\n   * The color of the button\n   */\n  color: PropTypes.string,\n  /**\n   * If `true`, the button will be disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * The size of the button\n   */\n  size: PropTypes.oneOf(['large', 'medium', 'small']),\n  /**\n   * Sets the width of the button to 100%\n   */\n  liquid: PropTypes.bool,\n  /**\n   * The type of button to use\n   */\n  variant: PropTypes.oneOf(['contained', 'outlined', 'text', 'fab']),\n  /**\n   * The position of the icon (if there is any)\n   */\n  iconPos: PropTypes.oneOf(['left', 'right', 'center']),\n  /**\n   * Inverts the foreground color for text and outlined variants\n   */\n  darkBg: PropTypes.bool,\n  /**\n   * What happens when the button is clicked\n   */\n  onClick: PropTypes.func,\n  /**\n   * What happens when the button is hovered\n   */\n  onMouseEnter: PropTypes.func,\n  /**\n   * What happens when the hover stops in the button\n   */\n  onMouseLeave: PropTypes.func,\n  /**\n   * CSS styles\n   */\n  className: PropTypes.string\n};\n\nconst defaultProps = {\n  color: 'porcelain',\n  disabled: false,\n  size: 'medium',\n  liquid: false,\n  variant: 'contained',\n  iconPos: 'left',\n  darkBg: false,\n  onClick: null,\n  onMouseEnter: null,\n  onMouseLeave: null,\n  className: null\n};\n\nconst Button = (props) => {\n  const {\n    color,\n    disabled,\n    size,\n    liquid,\n    variant,\n    iconPos,\n    darkBg,\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n    className\n  } = props;\n\n  return (\n    <Container\n      color={color}\n      disabled={disabled}\n      size={size}\n      liquid={liquid}\n      variant={variant}\n      iconPos={iconPos}\n      darkBg={darkBg}\n      onClick={onClick}\n      onMouseEnter={onMouseEnter}\n      onMouseLeave={onMouseLeave}\n      className={className}\n    >\n      {props.children}\n    </Container>\n  );\n};\n\nButton.propTypes = propTypes;\nButton.defaultProps = defaultProps;\n\nexport default Button;\n"]},"metadata":{},"sourceType":"module"}