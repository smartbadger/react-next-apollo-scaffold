{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/connor/dev/yodi/internal/react-next-apollo-scaffold/src/pages/_app.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo\";\nimport App from \"next/app\";\nimport fetch from \"node-fetch\";\nimport { ThemeProvider } from \"styled-components\";\nimport Normalize from \"../components/normalize\"; // Setup Base Theme \n\nimport theme from \"../components/theme\"; // Setup the Apollo Client\n\nconst client = new ApolloClient({\n  fetchOptions: {\n    credentials: \"include\"\n  },\n  fetch: fetch\n}); // Main App Wrapper\n// Apollo Wrapper -> ApolloProvider\n// Component -> React Component \n\nclass MyApp extends App {\n  static async getInitialProps(server) {\n    console.log(server);\n    return {};\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps\n    } = this.props;\n    return __jsx(ApolloProvider, {\n      client: client,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, __jsx(Normalize, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), __jsx(ThemeProvider, {\n      theme: theme,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, __jsx(Component, _extends({}, pageProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default MyApp;","map":{"version":3,"sources":["/Users/connor/dev/yodi/internal/react-next-apollo-scaffold/src/pages/_app.js"],"names":["ApolloClient","ApolloProvider","App","fetch","ThemeProvider","Normalize","theme","client","fetchOptions","credentials","MyApp","getInitialProps","server","console","log","render","Component","pageProps","props"],"mappings":";;;;AAAA,OAAOA,YAAP,MAAyB,cAAzB;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,SAASC,aAAT,QAA6B,mBAA7B;AACA,OAAOC,SAAP,MAAsB,yBAAtB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,qBAAlB,C,CAEA;;AACA,MAAMC,MAAM,GAAG,IAAIP,YAAJ,CAAiB;AAC5BQ,EAAAA,YAAY,EAAE;AACZC,IAAAA,WAAW,EAAE;AADD,GADc;AAI5BN,EAAAA,KAAK,EAAEA;AAJqB,CAAjB,CAAf,C,CAOA;AACA;AACA;;AACA,MAAMO,KAAN,SAAoBR,GAApB,CAAwB;AACtB,eAAaS,eAAb,CAA6BC,MAA7B,EAAqC;AACnCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,WAAO,EAAP;AACD;;AACDG,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAA0B,KAAKC,KAArC;AACA,WACI,MAAC,cAAD;AAAgB,MAAA,MAAM,EAAEX,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,MAAC,aAAD;AAAe,MAAA,KAAK,EAAED,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,SAAD,eAAeW,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ,CAFJ,CADJ;AAQD;;AAfqB;;AAkBxB,eAAeP,KAAf","sourcesContent":["import ApolloClient from \"apollo-boost\"\nimport { ApolloProvider } from \"react-apollo\"\nimport App from \"next/app\"\nimport fetch from \"node-fetch\"\nimport { ThemeProvider} from \"styled-components\"\nimport Normalize from \"../components/normalize\"\n// Setup Base Theme \nimport theme from \"../components/theme\"\n\n// Setup the Apollo Client\nconst client = new ApolloClient({\n    fetchOptions: {\n      credentials: \"include\"\n    },\n    fetch: fetch\n})\n\n// Main App Wrapper\n// Apollo Wrapper -> ApolloProvider\n// Component -> React Component \nclass MyApp extends App {\n  static async getInitialProps(server) {\n    console.log(server)\n    return {}\n  }\n  render() {\n    const { Component, pageProps} = this.props;\n    return (\n        <ApolloProvider client={client}>\n            <Normalize />\n            <ThemeProvider theme={theme}>\n                <Component {...pageProps}/>\n            </ThemeProvider>\n        </ApolloProvider>\n    )\n  }\n}\n\nexport default MyApp;\n"]},"metadata":{},"sourceType":"module"}